name: CI/CD
on: push
jobs:
  test:
    name: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        uses: actions/setup-node@v1
        with:
          node-version: '16.x'
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      - name: Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Lint
        run: yarn lint
      - name: Build
        run: yarn build
      - name: Bundle
        run: yarn bundle
      - name: Bundle minified
        run: NODE_OPTIONS="--max_old_space_size=4096" NODE_ENV=production yarn bundle
      - name: Release
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: yarn release

  publish:
    name: Publish
    needs: test
    if: contains(github.ref, 'refs/heads/master')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      - uses: actions/cache@v1
        id: yarn2-cache
        with:
          path: storybook/node_modules
          key: ${{ runner.os }}-node_modules2-${{ hashFiles('**/storybook/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules2-
      - name: Install example
        if: steps.yarn2-cache.outputs.cache-hit != 'true'
        run: cd storybook && yarn install
      - name: Build storybook
        run: cd storybook && yarn storybook:build
      - name: Deploy storybook
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
        run: cd storybook && yarn deploy --token "$FIREBASE_TOKEN"
